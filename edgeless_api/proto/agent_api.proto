syntax = "proto3";
import "google/protobuf/empty.proto";
package agent_api;


message InstanceId {
    string node_id = 1;
    string function_id = 2;
}

enum StatePolicy {
   TRANSIENT = 0;
   NODE_LOCAL = 1;
   GLOBAL = 2;
}

message StateSpecification {
    string state_id = 1;
    StatePolicy policy = 2;
}

message FunctionClassSpecification {
    string function_class_id  = 1;
    string function_class_type = 2;
    string function_class_version = 3;
    optional bytes function_class_inline_code = 4;
    // A function class is generic. However, to be able to interact with other functions beyond invacation+return value,
    // we need to invoke callbacks whose targets can be dynamically set for each instance.
    repeated string output_callback_declarations = 5;
}

message SpawnFunctionRequest {
    InstanceId instance_id = 1;
    FunctionClassSpecification code = 2;
    map<string, InstanceId> output_callback_definitions = 3;
    InstanceId return_continuation = 4;
    map<string, string> annotations = 5;
    StateSpecification state_specification = 6;
}

message UpdateFunctionLinksRequest {
    InstanceId instance_id = 1;
    map<string, InstanceId> output_callback_definitions = 3;
    InstanceId return_continuation = 4;
}

message WorkflowResource {
    string alias = 1;
    string resource_class_type = 2;
    map<string, string> output_callback_definitions = 3;
    map<string, string> configurations = 4;
}

message WorkflowFunction {
    string function_alias = 1;
    FunctionClassSpecification function_class = 2;
    map<string, string> output_callback_definitions = 3;
    string return_continuation = 4;
    map<string, string> function_annotations = 5;
}

message SpawnWorkflowRequest {
    WorkflowId workflow_id = 1;
    repeated WorkflowFunction workflow_functions = 2;
    repeated WorkflowResource workflow_resources = 3;
    map<string, string> workflow_annotations = 4;
}

message WorkflowFunctionMapping {
    string function_alias = 1;
    repeated InstanceId instances = 2;
}

message WorkflowInstanceStatus {
    WorkflowId workflow_id = 1;
    repeated WorkflowFunctionMapping functions = 2;
}

message WorkflowId {
    string workflow_id = 1;
}

message WorkflowInstanceList {
    repeated WorkflowInstanceStatus workflow_statuses = 1;
}

enum EventType {
    CALL = 0;
    CAST = 1;
    CALL_RET = 2;
    CALL_NO_RET = 3;
    ERR = 4;
}

message EventData {
    EventType event_type = 1;
    string payload = 2;
}

message Event {
    InstanceId target = 1;
    InstanceId source = 2;
    uint64 stream_id =3;
    EventData msg = 4;
}

message ResourceProviderSpecification {
    string provider_id = 1;
    string resource_class_type = 2;
    repeated string output_callback_declarations = 3;
}

message ResourceInstanceSpecification {
    string provider_id = 1;
    map<string, string> configuration = 2;
    map<string, InstanceId> output_callback_definitions = 3;
}

service FunctionInstance {
    rpc Start (SpawnFunctionRequest) returns (InstanceId);
    rpc Stop (InstanceId) returns (google.protobuf.Empty );
    rpc Update (UpdateFunctionLinksRequest) returns (google.protobuf.Empty);
}

service WorkflowInstance {
    rpc Start (SpawnWorkflowRequest) returns (WorkflowInstanceStatus);
    rpc Stop (WorkflowId) returns (google.protobuf.Empty);
    rpc List (WorkflowId) returns (WorkflowInstanceList);
}

service FunctionInvocation {
    rpc Handle (Event) returns (google.protobuf.Empty); 
}

service ResourceConfiguration {
    rpc Start (ResourceInstanceSpecification) returns (InstanceId);
    rpc Stop (InstanceId) returns (google.protobuf.Empty);
}