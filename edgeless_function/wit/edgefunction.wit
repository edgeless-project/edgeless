package edgeless:edgefunction

world edgefunction {
  
  record instance-id {
    node: string,
    function: string
  }

  variant call-ret {
    reply(string),
    noreply,
    err
  }

  import cast-alias: func(alias: string, msg: string)
  import cast: func(target: instance-id, msg: string)
  import call: func(target: instance-id, msg: string) -> call-ret
  import call-alias: func(alias: string, msg: string) -> call-ret
  import telemetry-log: func(lvl: string, target: string, message: string)
  import slf: func() -> instance-id
  import delayed-cast: func(delayms: u64, target: instance-id, payload: string)
  import sync: func(state: string)

  export handle-cast: func(source: instance-id, msg: string)
  export handle-call: func(source: instance-id, msg: string) -> call-ret
  export handle-init: func(payload: string, state: option<string>)
  export handle-stop: func()
}